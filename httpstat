#!/bin/bash

script=`basename $0`
while getopts 'v' flag; do
  case $flag in
    v ) verbose=y;;
  esac
done
shift $(($OPTIND-1)); OPTIND=1

if [ -t 0 ]; then
  urlArray=($@)
else
  urlArray=( `cat /dev/stdin` )
fi
if [ -z "$urlArray" ]; then
  echo -e "USAGE: $script [-v] [urls...]

You may also pipe in a list of URLs, one per line:

  cat urls.txt | $(basename $0)"
  exit 0
fi

colorDefault="\033[0m"
colorGreen="\033[1;32m"
colorRed="\033[1;31m"
colorYellow="\033[1;33m"
colorPurple="\033[1;35m"
colorCyan="\033[1;36m"
colorBlue="\033[1;34m"
for url in "${urlArray[@]}"; do
  comment=
  headers="$(curl -s --head $url)"
  if [ -z "$headers" ]; then
    httpStatus='---'
    comment='(no response)'
  else
    httpStatus="$(echo "$headers" | grep '^HTTP' | perl -pe 's/.* (\d{3}) .*$/$1/')"
  fi
  X="$colorDefault";
  case "${httpStatus:0:1}" in
    2 ) O="$colorGreen";;
    3 ) O="$colorBlue";;
    4 ) O="$colorYellow";;
    5 ) O="$colorRed";;
    - ) O="$colorPurple";;
    * ) O=""; X="";;
  esac
  location="$(echo "$headers" | grep '^Location:' | perl -pe 's/^Location: //')"
  output="$O$httpStatus$X $url"
  if [ -n "$location" ]; then
    output="$output -> $location"
  fi
  if [ -n "$comment" ]; then
    output="$output $O$comment$X"
  fi
  echo -e $output
  if [ "$verbose" = y ]; then
    echo -e "`echo -e "$headers" | perl -pe 's/^/  /'`"
  fi
done
